#---
#- name: Include a playbook from a collection
#  ansible.builtin.import_playbook: jasonb.utils.my_playbook
---
- name: Fail if molecule group is missing
  hosts: localhost
  tasks:
    - name: Print some info
      ansible.builtin.debug:
        msg: "{{ groups }}"

    - name: Assert group existence
      ansible.builtin.assert:
        that: "'molecule' in groups"
        fail_msg: |
          molecule group was not found inside inventory groups: {{ groups }}

- name: Converge
  hosts: molecule
  # We disable gather facts because it would fail due to our container not
  # having python installed. This will not prevent use from running 'raw'
  # commands. Most molecule users are expected to use containers that already
  # have python installed in order to avoid notable delays installing it.
  gather_facts: false
  tasks:
    - name: Check uname
      ansible.builtin.raw: uname -a
      register: result
      changed_when: false

    - name: Print some info
      ansible.builtin.assert:
        that: result.stdout | regex_search("^Linux")

- name: Include a role from a collection
  hosts: all
  vars:
    ansible_python_interpreter: /usr/bin/python3
  gather_facts: false
  tasks:
    - name: Testing role
      ansible.builtin.include_role:
        name: jasonb.utils.ansible_role_nginx
        tasks_from: main.yml

- name: Check installed packages
  hosts: all
  tasks:
    - name: Gather the package manager facts
      package_facts:
        manager: auto
 
    - name: Assert that the nginx package is installed
      assert:
        that:
          - "'nginx' in ansible_facts.packages"
    
    - name: Populate service facts
      ansible.builtin.service_facts:

    - name: Print service facts
      ansible.builtin.debug:
        var: ansible_facts.services
    
    - name: Assert that nginx is running
      assert:
        that:
          - ansible_facts.services['nginx'].state == 'running'

    - name: Get stats on nginx.conf
      stat:
        path: "/etc/nginx/nginx.conf"
      register: register_name

    - name: Check nginx.conf exists and is a regular file
      debug:
        msg: "The file or directory exists"
      when: register_name.stat.exists and register_name.stat.isreg   
    
    - name: Assert nginx.conf exists and is a regular file
      assert:
        that:
          - register_name.stat.exists and register_name.stat.isreg   

- name: Check http status
  hosts: all
  tasks:
    - name: Attempt to connect to a web service
      ansible.builtin.uri:
        url: http://localhost
        method: GET
      register: web_service_response
    
    - name: Ensure the web service is responding correctly
      assert:
        that: 
          - web_service_response.status == 200
        fail_msg: "Web service did not return a 200 status"